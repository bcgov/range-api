version: '3.5'

services:
  range_api:
    depends_on:
      - db
      - minio
    image: ${PROJECT}-${ENVIRONMENT}-api-img
    container_name: ${PROJECT}-${ENVIRONMENT}-api
    build:
      context: ./
      dockerfile: dev.Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
      - 9229:9229
    volumes:
      - ./src:/home/nodejs/app/src
      - ./scripts:/home/nodejs/app/scripts
      - ./__tests__:/home/nodejs/app/__tests__
      - ./__testHelpers__:/home/nodejs/app/__testHelpers__
    environment:
      - PORT=${API_PORT}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=db
      - NODE_ENV=${ENVIRONMENT}
      - POSTGRESQL_PORT=${POSTGRESQL_PORT}
      - MINIO_ENDPOINT=minio
      - MINIO_PUBLIC_ENDPOINT=127.0.0.1
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=secretminiokey123
      - MINIO_BUCKET=myra-dev
      - NODE_ENV=production
      - SSO_URL=https://dev.loginproxy.gov.bc.ca/auth/realms/standard/protocol/openid-connect
    networks:
      - local
  db:
    image: ${PROJECT}-${ENVIRONMENT}-postgress-img
    container_name: ${PROJECT}-${ENVIRONMENT}-db
    build:
      context: ./services/db
      dockerfile: Dockerfile
      args:
        - PORT:${POSTGRESQL_PORT}
    ports:
      - 5431:5432
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DATABASE}
    networks:
      - local
    volumes:
      - postgres:/var/lib/postgresql/data
  minio:
    image: minio/minio
    volumes:
      - minio-data:/data/minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: secretminiokey123
      MINIO_DOMAIN: localhost
    command: server /data/minio --console-address ":9001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - local
  # minio-nginx:
  #   image: nginx
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - 9000:9000
  #   depends_on:
  #     - minio
  #   networks:
  #     - local

networks:
  local:
    driver: bridge
    name: ${PROJECT}-${ENVIRONMENT}-network
volumes:
  postgres:
    name: ${PROJECT}-${ENVIRONMENT}-vol-postgres
  minio-data:
    name: minio-data-dev
