version: "3.5"

services:
  range_api:
    image: ${PROJECT}-${ENVIRONMENT}-api-test-img
    container_name: ${PROJECT}-${ENVIRONMENT}-api-test
    build:
      context: ./
      dockerfile: test.Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
      - 9229:9229
    volumes:
      - ./src:/home/nodejs/app/src
      - ./scripts:/home/nodejs/app/scripts
      - ./__tests__:/home/nodejs/app/__tests__
      - ./__testHelpers__:/home/nodejs/app/__testHelpers__
    environment:
      - PORT=${API_PORT}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE_TEST}
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=${POSTGRESQL_HOST}
      - NODE_ENV=${ENVIRONMENT}
      - POSTGRESQL_PORT=${POSTGRESQL_PORT}
      - MINIO_ENDPOINT=minio
      - MINIO_PUBLIC_ENDPOINT=localhost
      - MINIO_PORT=9001
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=secretminiokey123
      - MINIO_BUCKET=myra-test
      - SSO_URL=https://sso-dev.pathfinder.gov.bc.ca/auth/realms/range/protocol/openid-connect
    networks:
      - local
  db:
    image: ${PROJECT}-${ENVIRONMENT}-postgress-test-img
    container_name: ${PROJECT}-${ENVIRONMENT}-test-db
    build:
      context: ./services/db
      dockerfile: Dockerfile
      args:
        - PORT:${POSTGRESQL_PORT}
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DATABASE_TEST}
    networks:
      - local
  minio:
    image: minio/minio
    ports:
      - 9001
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: secretminiokey123
      MINIO_DOMAIN: localhost 
    command: server /data/minio 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - local
  minio-nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 9001:9001
    depends_on:
      - minio
    networks:
      - local

networks:
  local:
    driver: bridge
    name: ${PROJECT}-${ENVIRONMENT}-network-test